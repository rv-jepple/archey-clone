#!/bin/bash
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# Variables

## Names
user=$(whoami)
hostname=$(hostname | sed 's/.local//g')

## Version name
versionNumber=$(sw_vers -productVersion) # Finds version number

versionMajor=`echo $versionNumber | cut -d'.' -f1`
versionMinor=`echo $versionNumber | cut -d'.' -f2`
versionShort="${versionMajor}.${versionMinor}"

## Version of OS X
case $versionShort in
    10.12|10.13|10.14)
        version="macOS ${versionNumber}"
        ;;
    *)
        version="OS X ${versionNumber}"
        ;;
esac

## en1 or en0 should contain the ip address
ipAddress=`ipconfig getifaddr en1`
if [ -z "$ipAddress" ]; then
    ipAddress=`ipconfig getifaddr en0`
fi

case $versionShort in
    10.14)
        versionString="Mojave"
        ;;
    10.13)
        versionString="High Sierra"
        ;;
    10.12)
        versionString="Sierra"
        ;;
    10.11)
        versionString="El Capitan"
        ;;
    10.10)
        versionString="Yosemite"
        ;;
    10.9)
        versionString="Mavericks"
        ;;
    10.8)
        versionString="Mountain Lion"
        ;;
    10.7)
        versionString="Lion"
        ;;
    10.6)
        versionString="Snow Leopard"
        ;;
    10.5)
        versionString="Leopard"
        ;;
    10.4)
        versionString="Tiger"
        ;;
    10.3)
        versionString="Panther"
        ;;
    10.2)
        versionString="Jaguar"
        ;;
    10.1)
        versionString="Puma"
        ;;
    10.0)
        versionString="Cheetah"
        ;;
esac

## Kernal
kernel=$(uname)

## Uptime
uptime=$(uptime | sed 's/.*up \([^,]*\), .*/\1/')

## Shell
shell="$SHELL"

## Terminal
terminal="$TERM"

## Number of packages installed via Homebrew
packages="`brew list -l | wc -l | awk '{print $1 }'`"

## CPU Type
cpu=$(sysctl -n machdep.cpu.brand_string)

## Memory Amount
mem=$(sysctl -n hw.memsize)
ram="$((mem/1073741824)) GB"

## Disk usage
disk=`df | head -2 | tail -1 | awk '{print $5}'`

## Battery Health
battery=$(ioreg -c AppleSmartBattery -r | awk '$1~/Capacity/{c[$1]=$3} END{OFMT="%.2f%"; max=c["\"MaxCapacity\""]; if (max>0) { print 100*c["\"CurrentCapacity\""]/max;} }')


# Add a -c option to enable classic color logo
if [[ $1 == "-c" ]]; then
  GREEN='\033[00;32m'
  YELLOW='\033[00;33m'
  LRED='\033[01;31m'
  RED='\033[00;31m'
  PURPLE='\033[00;35m'
  CYAN='\033[00;36m'
  BLUE='\033[00;34m'
fi

# Output

echo -e "
${GREEN}                  ###                 User: $user
${GREEN}                ####                  Hostname: $hostname
${GREEN}                ###                   Version: $version $versionString
${GREEN}       ####### ##  #######            Kernel: $kernel
${YELLOW}     ######################           Uptime: $uptime
${YELLOW}    #####################             Shell: $shell
${LRED}    ####################              Terminal: $terminal
${RED}    ####################              Packages: $packages
${RED}    #####################             CPU: $cpu
${PURPLE}     ######################           Memory: $ram
${PURPLE}      ####################            Disk Used: $disk
${BLUE}        ################              Battery: $battery%
${BLUE}         ####     #####               Internal IP: $ipAddress
"
tput sgr0
